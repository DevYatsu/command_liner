import os
from command import Command
from command_liner import CommandLiner

commands_prefix = "cl"
command_client = CommandLiner(commands_prefix)

create_command = Command("create", "allows creating a file").add_parameter("file_name").set_script('''
file = open("+++", "x")
file.close()
''', "file_name")

remove_command = Command("remove", "allows removing a file").add_parameter("file_name").set_script('''
import os
os.remove("+++")
''', "file_name")

rename_command = Command("rename", "allows renaming a file").add_params("file_name", "new_name").set_script('''
import os
os.rename("+++", "+++")
''', "file_name", "new_name")

get_command = Command("get", "allows to perform a get request").add_params("url", "file_name").set_script('''
import requests
r = requests.get("+++")
data = r.json()

file = open("+++", "a")
file.write("{}".format(data))
file.close()
''', "url", "file_name")

generate_sh_command = Command("generate-sh", "allows to generate a sh file to run the script").set_script(f'''
def generate_sh_script():
    import os

    script_path = "/usr/local/bin/{commands_prefix}.sh"

    # Open the file in write mode
    with open(script_path, "w") as script_file:
        # Write the script content
        script_file.write("#!/bin/bash\\n")
        script_file.write("# shell script generated by DevYatsu's command_liner on GitHub\\n\\n")
        script_file.write(f'python3 {os.getcwd()}/main.py "$@"\\n')


    # Set the file permissions to make it executable
    import stat
    os.chmod(script_path, stat.S_IRWXU)  # Add execute permissions to the owner
    
generate_sh_script()
''')

write_command = Command("write", "allows writing content to a file").add_params("file_name", "content").add_optional_parameter("mode").set_script('''
file_name = "+++"
content = "+++"
mode = "+++"

if mode is None or mode == "":
    mode = "w"

file = open(file_name, mode)
file.write(content)
file.close()
''', "file_name", "content", "mode")

help_command = Command("help", "A command to get help").set_script(f'''
print("To get informations on a specific command:\\n")       
print(f"\\t* <command name> --help\\n")      
print("To see a command description:\\n")       
print(f"\\t* <command name> --description\\n")                                                                                                               
''')


commands = list([create_command, remove_command, rename_command,
                 get_command, write_command, generate_sh_command, help_command])

command_client.append_commands(*commands).list_commands().run_command()
